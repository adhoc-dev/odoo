-
   Create this invoices with supplier number because if not we have an error in demo data load
   Set the context for supplier bills because the 'type' field is readonly in invoice form views, so it value won't be considered by the yaml import
-
  !context
    type: 'in_invoice'
-
  !record {model: account.invoice, id: demo_invoice_january_wages}:
    company_id: base.main_company
    partner_id: base.res_partner_12
    type: 'in_invoice'
    document_number: '0001-00000011'
-
  !python {model: ir.model.data} : |
      line_vals = {
          'invoice_id': ref('demo_invoice_january_wages'),
          'name': "CEO wages",
          'price_unit': 10000,
      }
      account_id = self.pool.get('account.account').search(cr, uid, [('tag_ids', 'in', [ref('account.demo_ceo_wages_account')])])
      if not account_id:
          account_id = self.pool.get('account.account').search(cr, uid, [('user_type_id', '=', ref('account.data_account_type_expenses'))])
      if account_id:
          tax_id = self.pool.get('account.tax').search(cr, uid, [('type_tax_use', '=', 'purchase'), ('amount', '>', 0)])
          if tax_id:
            line_vals['invoice_line_tax_ids'] = [(6, 0, [tax_id[0]])]
          line_vals['account_id'] = account_id[0]
          self._update(cr, uid, 'account.invoice.line', 'account', line_vals, 'ceo_wages_line')
          self.pool.get('account.invoice').browse(cr, uid, ref('demo_invoice_january_wages'))._onchange_invoice_line_ids()
-
  !record {model: account.invoice, id: demo_invoice_equipment_purchase}:
    company_id: base.main_company
    partner_id: base.res_partner_1
    type: 'in_invoice'
    document_number: '0003-00000023'
-
  Set some products with vat 0, vat exempt, vat untaxed and aat 27
-
  !python {model: product.template} : |
      mapping_list = [
          ('product.product_product_43_product_template', 'l10n_ar_account.ri_tax_group_iva_no_gravado'),
          ('product.product_product_39_product_template', 'l10n_ar_account.ri_tax_group_iva_exento'),
          ('product.product_product_53_product_template', 'l10n_ar_account.ri_tax_group_iva_10'),
          ('product.product_product_55_product_template', 'l10n_ar_account.ri_tax_group_iva_0'),
          ('product.product_product_50_product_template', 'l10n_ar_account.ri_tax_group_iva_27'),
      ]
      for product_xml_id, tax_code_xml_id in mapping_list:
          # product_template = self.browse(cr, uid, ref(product_xml_id))
          tax_ids = self.pool.get('account.tax').search(cr, uid, [('type_tax_use', '=', 'sale'), ('tax_group_id', '=', ref(tax_code_xml_id))])
          if tax_ids:
              self.write(cr, uid, ref(product_xml_id), {'taxes_id': [(6, None, tax_ids)]})
